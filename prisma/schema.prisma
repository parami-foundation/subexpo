datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model ChainBlock {
  id              Int              @id @default(autoincrement())
  blockNum        Int
  blockTimestamp  Int
  hash            String
  parentHash      String
  stateRoot       String
  extrinsicsRoot  String
  logs            ChainLog[]
  extrinsics      ChainExtrinsic[]
  eventCount      Int
  extrinsicsCount Int
  events          ChainEvent[]
  specVersion     Int
  validator       String
  codecError      Boolean
  finalized       Boolean
}

model ChainEvent {
  id            Int         @id @default(autoincrement())
  eventIndex    String
  blockNum      Int
  extrinsicIdx  Int
  type          String
  moduleId      String
  eventId       String
  params        String      @db.Text
  extrinsicHash String
  eventIdx      Int
  ChainBlock    ChainBlock? @relation(fields: [chainBlockId], references: [id])
  chainBlockId  Int?
}

model ChainExtrinsic {
  id                 Int         @id @default(autoincrement())
  extrinsicIndex     String
  blockNum           Int
  blockTimestamp     Int
  extrinsicLength    String
  versionInfo        String
  callCode           String
  callModuleFunction String
  callModule         String
  params             String      @db.MediumText
  accountId          String
  signature          String
  nonce              Int
  era                String
  extrinsicHash      String
  isSigned           Boolean
  success            Boolean
  fee                BigInt
  batchIndex         Int
  ChainBlock         ChainBlock? @relation(fields: [chainBlockId], references: [id])
  chainBlockId       Int?
}

model ChainLog {
  id           Int         @id @default(autoincrement())
  blockNum     Int
  logIndex     String
  logType      String
  data         String
  finalized    Boolean
  ChainBlock   ChainBlock? @relation(fields: [chainBlockId], references: [id])
  chainBlockId Int?
}

model RuntimeVersion {
  id          Int    @id @default(autoincrement())
  name        String
  specVersion Int
  modules     String @db.Text
  rawData     String @db.MediumText
}
