datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model ChainBlock {
  id              Int              @id @default(autoincrement())
  blockNum        Int
  blockTimestamp  DateTime
  hash            String
  parentHash      String
  stateRoot       String
  extrinsicsRoot  String
  logs            ChainLog[]
  extrinsics      ChainExtrinsic[]
  extrinsicsCount Int
  events          ChainEvent[]
  eventCount      Int
  specVersion     Int
  validator       String
  finalized       Boolean          @default(false)
}

model ChainEvent {
  id            Int         @id @default(autoincrement())
  eventIndex    String
  blockNum      Int
  extrinsicIdx  Int
  section       String
  method        String
  data          Json
  extrinsicHash String
  eventIdx      Int
  ChainBlock    ChainBlock? @relation(fields: [chainBlockId], references: [id])
  chainBlockId  Int?
}

model ChainExtrinsic {
  id              Int         @id @default(autoincrement())
  extrinsicIndex  String
  blockNum        Int
  blockTimestamp  DateTime
  extrinsicLength Int
  versionInfo     Int
  method          String
  section         String
  args            Json
  accountId       String?
  signature       String?
  nonce           Int
  extrinsicHash   String
  isSigned        Boolean
  success         Boolean
  fee             BigInt
  tip             BigInt
  ChainBlock      ChainBlock? @relation(fields: [chainBlockId], references: [id])
  chainBlockId    Int?
}

model ChainLog {
  id           Int         @id @default(autoincrement())
  blockNum     Int
  logIndex     String
  logType      String
  data         Json
  finalized    Boolean     @default(false)
  ChainBlock   ChainBlock? @relation(fields: [chainBlockId], references: [id])
  chainBlockId Int?
}

model RuntimeVersion {
  id          Int    @id @default(autoincrement())
  name        String
  specVersion Int
  modules     String @db.Text
  rawData     String @db.MediumText
}
